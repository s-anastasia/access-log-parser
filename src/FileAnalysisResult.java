import java.util.Map;
import java.util.Set;

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
 */
public class FileAnalysisResult {

    // ========== –ü–û–õ–Ø –ö–õ–ê–°–°–ê ==========

    private final String fileName; // –ò–º—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
    private final int totalLines; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    private final int googlebotCount; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Googlebot
    private final int yandexbotCount; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç YandexBot
    private final double googlebotPercentage; // –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Googlebot
    private final double yandexbotPercentage; // –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç YandexBot
    private final double averageTrafficPerHour; // –°—Ä–µ–¥–Ω–∏–π —Ç—Ä–∞—Ñ–∏–∫ –≤ —á–∞—Å
    private final long totalTraffic; // –û–±—â–∏–π –æ–±—ä–µ–º —Ç—Ä–∞—Ñ–∏–∫–∞
    private final Statistics statistics; // –û–±—ä–µ–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

    // ========== –ö–û–ù–°–¢–†–£–ö–¢–û–† ==========

    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     * @param fileName –∏–º—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
     * @param stats –æ–±—ä–µ–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∞–ª–∏–∑–∞
     */
    public FileAnalysisResult(String fileName, Statistics stats) {
        this.fileName = fileName;
        this.totalLines = stats.getTotalEntries();
        this.googlebotCount = stats.getGooglebotCount();
        this.yandexbotCount = stats.getYandexbotCount();
        this.googlebotPercentage = stats.getGooglebotPercentage();
        this.yandexbotPercentage = stats.getYandexbotPercentage();
        this.averageTrafficPerHour = stats.getTrafficRate();
        this.totalTraffic = stats.getTotalTraffic();
        this.statistics = stats;
    }

    // ========== –ú–ï–¢–û–î–´ –í–´–í–û–î–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==========

    /**
     * –í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
     */
    public void printResults() {
        System.out.println("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–∞ '" + fileName + "':");
        System.out.println("1. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: " + totalLines);
        System.out.printf("2. –ó–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Googlebot: %d (%.2f%%)%n",
                googlebotCount, googlebotPercentage);
        System.out.printf("3. –ó–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç YandexBot: %d (%.2f%%)%n",
                yandexbotCount, yandexbotPercentage);
        System.out.println("4. –û–±—â–∏–π –æ–±—ä–µ–º —Ç—Ä–∞—Ñ–∏–∫–∞: " + formatBytes(totalTraffic));
        System.out.printf("5. –°—Ä–µ–¥–Ω–∏–π –æ–±—ä—ë–º —Ç—Ä–∞—Ñ–∏–∫–∞ –∑–∞ —á–∞—Å: %s/—á–∞—Å%n",
                formatBytes(averageTrafficPerHour));

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
        System.out.printf("6. –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π –≤ —á–∞—Å: %.2f/—á–∞—Å%n",
                statistics.getAverageVisitsPerHour());
        System.out.printf("7. –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å: %.2f/—á–∞—Å%n",
                statistics.getAverageErrorRequestsPerHour());
        System.out.printf("8. –°—Ä–µ–¥–Ω—è—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –æ–¥–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: %.2f –ø–æ—Å–µ—â–µ–Ω–∏–π/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å%n",
                statistics.getAverageVisitsPerUser());
        System.out.println("9. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + statistics.getUniqueHumanUsers());
        System.out.println("10. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: " + statistics.getErrorRequests());
        System.out.println("11. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: " + statistics.getExistingPages().size());
        System.out.println("12. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: " + statistics.getNotFoundPages().size());
        System.out.println("13. –ü–∏–∫–æ–≤–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥—É: " + statistics.getPeakVisitsPerSecond());
        System.out.println("14. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –æ–¥–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: " + statistics.getMaxVisitsPerUser());

        // –°–∞–π—Ç—ã-—Ä–µ—Ñ–µ—Ä–µ—Ä—ã
        Set<String> referers = statistics.getRefererDomains();
        System.out.println("15. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤-—Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤: " + referers.size());

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
        Map<String, Double> osStats = statistics.getOsStatistics();
        System.out.println("16. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º:");
        if (!osStats.isEmpty()) {
            osStats.forEach((os, percentage) ->
                    System.out.printf("   - %s: %.2f%%%n", os, percentage * 100));
        } else {
            System.out.println("   –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö");
        }

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤
        Map<String, Double> browserStats = statistics.getBrowserStatistics();
        System.out.println("17. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤:");
        if (!browserStats.isEmpty()) {
            browserStats.forEach((browser, percentage) ->
                    System.out.printf("   - %s: %.2f%%%n", browser, percentage * 100));
        } else {
            System.out.println("   –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±—Ä–∞—É–∑–µ—Ä–∞—Ö");
        }

        if (totalLines == 0) {
            System.out.println("‚ö†Ô∏è  –§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –ª–æ–≥-–∑–∞–ø–∏—Å–µ–π");
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥ (–ö–ë, –ú–ë, –ì–ë)
     * @param bytes —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
     * @return –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Ä–∞–∑–º–µ—Ä–æ–º
     */
    private String formatBytes(double bytes) {
        if (bytes < 1024) {
            return String.format("%.0f –±–∞–π—Ç", bytes);
        } else if (bytes < 1024 * 1024) {
            return String.format("%.2f –ö–ë", bytes / 1024);
        } else if (bytes < 1024 * 1024 * 1024) {
            return String.format("%.2f –ú–ë", bytes / (1024 * 1024));
        } else {
            return String.format("%.2f –ì–ë", bytes / (1024 * 1024 * 1024));
        }
    }

    // ========== –ì–ï–¢–¢–ï–†–´ –û–°–ù–û–í–ù–´–• –ü–û–õ–ï–ô ==========

    /**
     * @return –∏–º—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
     */
    public String getFileName() { return fileName; }

    /**
     * @return –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
     */
    public int getTotalLines() { return totalLines; }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Googlebot
     */
    public int getGooglebotCount() { return googlebotCount; }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç YandexBot
     */
    public int getYandexbotCount() { return yandexbotCount; }

    /**
     * @return –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Googlebot
     */
    public double getGooglebotPercentage() { return googlebotPercentage; }

    /**
     * @return –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç YandexBot
     */
    public double getYandexbotPercentage() { return yandexbotPercentage; }

    /**
     * @return —Å—Ä–µ–¥–Ω–∏–π —Ç—Ä–∞—Ñ–∏–∫ –≤ —á–∞—Å
     */
    public double getAverageTrafficPerHour() { return averageTrafficPerHour; }

    /**
     * @return –æ–±—â–∏–π –æ–±—ä–µ–º —Ç—Ä–∞—Ñ–∏–∫–∞
     */
    public long getTotalTraffic() { return totalTraffic; }

    /**
     * @return –æ–±—ä–µ–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    public Statistics getStatistics() { return statistics; }

    // ========== –ì–ï–¢–¢–ï–†–´ –î–õ–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ü–û–°–ï–©–ê–ï–ú–û–°–¢–ò ==========

    /**
     * @return —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π –≤ —á–∞—Å
     */
    public double getAverageVisitsPerHour() { return statistics.getAverageVisitsPerHour(); }

    /**
     * @return —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å
     */
    public double getAverageErrorRequestsPerHour() { return statistics.getAverageErrorRequestsPerHour(); }

    /**
     * @return —Å—Ä–µ–¥–Ω—è—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –æ–¥–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
     */
    public double getAverageVisitsPerUser() { return statistics.getAverageVisitsPerUser(); }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     */
    public int getUniqueHumanUsers() { return statistics.getUniqueHumanUsers(); }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
     */
    public int getErrorRequests() { return statistics.getErrorRequests(); }

    /**
     * @return –ø–∏–∫–æ–≤–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥—É
     */
    public int getPeakVisitsPerSecond() { return statistics.getPeakVisitsPerSecond(); }

    /**
     * @return –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –æ–¥–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
     */
    public int getMaxVisitsPerUser() { return statistics.getMaxVisitsPerUser(); }

    // ========== –ì–ï–¢–¢–ï–†–´ –î–õ–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò –°–¢–†–ê–ù–ò–¶ ==========

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public int getExistingPagesCount() { return statistics.getExistingPages().size(); }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public int getNotFoundPagesCount() { return statistics.getNotFoundPages().size(); }

    /**
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤-—Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
     */
    public int getRefererDomainsCount() { return statistics.getRefererDomains().size(); }

    // ========== –ì–ï–¢–¢–ï–†–´ –î–õ–Ø –ö–û–õ–õ–ï–ö–¶–ò–ô ==========

    /**
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public Set<String> getExistingPages() { return statistics.getExistingPages(); }

    /**
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
     */
    public Set<String> getNotFoundPages() { return statistics.getNotFoundPages(); }

    /**
     * @return –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–æ–º–µ–Ω–æ–≤-—Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
     */
    public Set<String> getRefererDomains() { return statistics.getRefererDomains(); }

    /**
     * @return —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    public Map<String, Double> getOsStatistics() { return statistics.getOsStatistics(); }

    /**
     * @return —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     */
    public Map<String, Double> getBrowserStatistics() { return statistics.getBrowserStatistics(); }

    /**
     * @return —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
     */
    public Map<String, Integer> getOsCounts() { return statistics.getOsCounts(); }

    /**
     * @return —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
     */
    public Map<String, Integer> getBrowserCounts() { return statistics.getBrowserCounts(); }
}